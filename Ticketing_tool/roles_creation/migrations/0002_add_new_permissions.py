# # Generated by Django 5.1.5 on 2025-04-06 05:40

# from django.db import migrations


# class Migration(migrations.Migration):

#     dependencies = [
#         ('roles_creation', '0001_initial'),
#     ]

#     operations = [
#     ]


# from django.db import migrations


# def create_permissions(apps, schema_editor):
#     Permission = apps.get_model('auth', 'Permission')  # Use 'auth' for default Permission model
#     Group = apps.get_model('auth', 'Group')  # Use 'auth' for default Group model

#     permissions = [
#         "create_users", "update_users", "delete_users", "view_users",
#         "create_ticket", "update_ticket", "delete_ticket", "view_ticket",
#         "create_sla", "update_sla", "delete_sla", "view_sla",
#         "create_organization", "update_organization", "delete_organization", "view_organization",
#         "create_category", "update_category", "delete_category", "view_category",
#         "create_knowledge_article", "update_knowledge_article", "delete_knowledge_article", "view_knowledge_article",
#         "create_priority", "update_priority", "delete_priority", "view_priority",
#         "create_roles", "update_roles", "delete_roles", "view_roles",
#         "create_resolution", "update_resolution", "delete_resolution", "view_resolution",
#         "create_solution_group", "update_solution_group", "delete_solution_group", "view_solution_group",
#         "create_employee", "update_employee", "delete_employee", "view_employee",
#         "create_personal_details", "update_personal_details", "delete_personal_details", "view_personal_details",
#     ]

#     # # Create permissions
#     # for perm in permissions:
#     #     Permission.objects.get_or_create(name=perm)

#     # # Assign permissions to the "Team Lead" group
#     # team_lead_group, created = Group.objects.get_or_create(name="Team Lead")
#     # for perm_name in ["create_organization", "update_organization", "delete_organization", "view_organization"]:
#     #     permission = Permission.objects.filter(name=perm_name).first()
#     #     if permission:
#     #         team_lead_group.permissions.add(permission)


# class Migration(migrations.Migration):

#     dependencies = [
#         ('roles_creation', '0001_initial'),
#     ]

#     operations = [
#         migrations.RunPython(create_permissions),
#     ]

# from django.db import migrations


# class Migration(migrations.Migration):

#     dependencies = [
#         ('roles_creation', '0001_initial'),
#     ]

#     operations = [
#     ]


    

# from django.db import migrations


# def create_new_permissions(apps, schema_editor):
#     Permission = apps.get_model('roles_creation', 'Permission')

#     permissions = [
#         "create_users", "update_users", "delete_users", "view_users",
#         "create_ticket", "update_ticket", "delete_ticket", "view_ticket",
#         "create_sla","update_sla","delete_sla","view_sla",
#         "create_organization", "update_organization", "delete_organization", "view_organization",
#         "create_category", "update_category", "delete_category", "view_category",
#         "create_knowledge_article", "update_knowledge_article", "delete_knowledge_article", "view_knowledge_article",
#         "create_priority", "update_priority", "delete_priority", "view_priority",
#         "create_roles", "update_roles", "delete_roles", "view_roles",
#         "create_resolution", "update_resolution", "delete_resolution", "view_resolution",
#         "create_solution_group", "update_solution_group", "delete_solution_group", "view_solution_group",
#         "create_employee", "update_employee", "delete_employee", "view_employee",
#         "create_personal_details","update_personal_details","delete_personal_details","view_personal_details",
        
#     ]

#     for perm in permissions:
#         Permission.objects.get_or_create(name=perm)


# class Migration(migrations.Migration):

#     dependencies = [
#         ('roles_creation', '0001_initial'),  # Make sure the dependency is correct
#     ]

#     operations = [
#         migrations.RunPython(create_new_permissions),
#     ]
# # this is the migration file


from django.db import migrations


def create_permissions_and_roles(apps, schema_editor):
    Permission = apps.get_model('roles_creation', 'Permission')
    Role = apps.get_model('roles_creation', 'Role')  # assuming the model name is Role

    # Step 1: Create permissions
    permissions_list = [
        "create_users", "update_users", "delete_users", "view_users",
        "create_ticket", "update_ticket", "delete_ticket", "view_ticket",
        "create_sla", "update_sla", "delete_sla", "view_sla",
        "create_organization", "update_organization", "delete_organization", "view_organization",
        "create_category", "update_category", "delete_category", "view_category",
        "create_knowledge_article", "update_knowledge_article", "delete_knowledge_article", "view_knowledge_article",
        "create_priority", "update_priority", "delete_priority", "view_priority",
        "create_roles", "update_roles", "delete_roles", "view_roles",
        "create_resolution", "update_resolution", "delete_resolution", "view_resolution",
        "create_solution_group", "update_solution_group", "delete_solution_group", "view_solution_group",
        "create_employee", "update_employee", "delete_employee", "view_employee",
        "create_personal_details", "update_personal_details", "delete_personal_details", "view_personal_details",
    ]

    permission_objs = {}
    for perm_name in permissions_list:
        permission_obj, _ = Permission.objects.get_or_create(name=perm_name)
        permission_objs[perm_name] = permission_obj

    # Step 2: Define roles and associated permissions
    roles_with_permissions = {
        "Admin": permissions_list,  # All permissions
        "Viewer": [perm for perm in permissions_list if perm.startswith("view_")],
        "Editor": [perm for perm in permissions_list if perm.startswith("update_") or perm.startswith("view_")],
        "Creator": [perm for perm in permissions_list if perm.startswith("create_") or perm.startswith("view_")],
    }

    # Step 3: Create roles and assign permissions
    for role_name, perms in roles_with_permissions.items():
        role_obj, _ = Role.objects.get_or_create(name=role_name)
        role_obj.permissions.set([permission_objs[perm] for perm in perms])


class Migration(migrations.Migration):

    dependencies = [
        ('roles_creation', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(create_permissions_and_roles),
    ]
