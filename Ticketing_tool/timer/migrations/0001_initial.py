# Generated by Django 5.1.5 on 2025-04-27 07:32

import datetime
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organisation_details', '0001_initial'),
        ('priority', '0001_initial'),
        ('services', '0001_initial'),
        ('solution_groups', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SLATimer',
            fields=[
                ('sla_id', models.AutoField(primary_key=True, serialize=False)),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('paused_time', models.DateTimeField(blank=True, null=True)),
                ('resumed_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('total_paused_time', models.DurationField(default=datetime.timedelta(0))),
                ('sla_due_date', models.DateTimeField(blank=True, null=True)),
                ('breached', models.BooleanField(default=False)),
                ('warning_sent', models.BooleanField(default=False)),
                ('sla_status', models.CharField(choices=[('Active', 'Active'), ('Paused', 'Paused'), ('Stopped', 'Stopped')], default='Active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sla_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sla_modified', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PauseLogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paused_time', models.DateTimeField(blank=True, null=True)),
                ('resumed_time', models.DateTimeField(blank=True, null=True)),
                ('pause_duration', models.DurationField(default=datetime.timedelta)),
                ('sla_timer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pause_logs', to='timer.slatimer')),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('pre_assignee', models.JSONField(default=list, null=True)),
                ('issue_type', models.CharField(blank=True, choices=[('F', 'Incident'), ('G', 'Service Request')], default='', max_length=50, null=True)),
                ('impact', models.CharField(blank=True, choices=[('A', 'High'), ('B', 'Medium'), ('C', 'Low')], default='', max_length=50, null=True)),
                ('support_team', models.CharField(blank=True, choices=[('a', 'FirstLevel'), ('b', 'SecondLevel')], default='', max_length=50, null=True)),
                ('customer_number', models.CharField(blank=True, max_length=50, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('project', models.CharField(max_length=50)),
                ('product', models.CharField(max_length=30)),
                ('customer_country', models.CharField(blank=True, max_length=50, null=True)),
                ('ticket_id', models.CharField(max_length=32, primary_key=True, serialize=False, unique=True)),
                ('summary', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('open', 'Open'), ('Working in Progress', 'Working in Progress'), ('Waiting for User Response', 'Waiting for User Response'), ('Resolved', 'Resolved'), ('Closed', 'Closed'), ('Breached', 'Breached'), ('Canceled', 'Canceled'), ('Delegated', 'Delegated')], default='open', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('Issue_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='services.issuecategory')),
                ('assignee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='solution_engineer', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ticket_created_by', to=settings.AUTH_USER_MODEL)),
                ('developer_organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='organisation_details.organisation')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ticket_modified_by', to=settings.AUTH_USER_MODEL)),
                ('priority', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='priority', to='priority.priority')),
                ('product_issue', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='s_product', to='services.issuetype')),
                ('reference_tickets', models.ManyToManyField(blank=True, to='timer.ticket')),
                ('solution_grp', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='s_solution_group', to='solution_groups.solutiongroup')),
            ],
        ),
        migrations.AddField(
            model_name='slatimer',
            name='ticket',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sla_timers', to='timer.ticket'),
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='attachments/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='timer.ticket')),
            ],
        ),
    ]
